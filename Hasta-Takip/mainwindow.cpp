#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QString>
#include <QTimer>
#include <QDesktopWidget>
#include <QUrl>
#include <QtSql/QSql>
#include <QtSql/QSqlDatabase>
#include <QtSql/QSqlDriver>
#include <QtSql/QSqlQuery>
#include <QDebug>
#include <QtGlobal>
#include <iostream>
#include <QDialog>
#include <dialog.h>

#include <vector>
#include <string>
#include <algorithm>
#include <sstream>
#include <iterator>
#include <iostream>
QString deneme22= "!939!940!941!942!944!945!946!947!951!956!962!967!973!978!983!989!994!1000!1005!1015!1024!1034!1043!1053!1062!1075!1087!1100!1112!1121!1126!1131!1136!1141!1146!1151!1156!1164!1172!1179!1187!1194!1202!1209!1216!1222!1229!1235!1241!1248!1254!1260!1264!1268!1271!1275!1279!1283!1287!1286!1284!1281!1279!1276!1274!1271!1268!1266!1263!1261!1258!1256!1253!1251!1246!1242!1237!1232!1227!1222!1218!1215!1211!1207!1203!1199!1195!1191!1184!1178!1171!1165!1159!1152!1146!1141!1136!1130!1125!1120!1115!1110!1103!1096!1088!1080!1073!1065!1057!1049!1040!1030!1021!1012!1004!995!987!982!978!974!970!966!963!959!955!952!949!945!942!939!938!939!940!941!943!944!945!946!946!946!946!946!946!946!946!947!950!952!954!956!958!960!962!964!965!965!965!965!965!965!963!960!957!954!951!947!944!941!938!932!926!920!913!907!901!894!885!865!820!733!606!555!507!632!697!752!807!896!977!1023!1069!1127!1237!1347!1457!2085!2246!2474!2549!2595!2641!2695!3083!3135!3187!3217!3315!3403!3492!3581!3804!3847!3890!3798!3443!3453!3297!3053!2819!2810!2225!2258!1892!1734!1625!998!903!355!376!203!30!33!61!90!119!160!238!275!292!309!325!343!371!399!429!484!542!602!652!703!758!802!838!856!875!895!917!938!967!1016!1035!1041!1047!1054!1060!1066!1066!1064!1061!1058!1056!1053!1051!1048!1046!1043!1041!1038!1035!1033!1030!1028!1025!1022!1019!1017!1014!1011!1008!1006!1003!1001!999!998!996!994!993!991!990!988!986!985!983!981!978!976!973!971!968!966!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!964!965!966!967!968!969!970!971!972!974!976!978!980!983!985!987!989!991!993!995!997!999!1002!1006!1011!1015!1019!1023!1028!1032!1036!1040!1045!1050!1055!1059!1064!1069!1076!1082!1088!1095!1101!1107!1114!1120!1126!1132!1141!1149!1158!1166!1173!1178!1183!1188!1193!1198!1203!1208!1214!1221!1227!1233!1240!1246!1250!1254!1259!1263!1269!1278!1286!1294!1303!1309!1315!1322!1328!1334!1341!1343!1345!1347!1349!1351!1353!1355!1357!1359!1359!1359!1359!1359!1358!1356!1354!1352!1350!1347!1345!1343!1341!1339!1336!1334!1332!1329!1327!1324!1322!1320!1317!1315!1312!1307!1301!1294!1288!1281!1275!1270!1265!1260!1256!1251!1246!1240!1233!1227!1221!1214!1208!1201!1194!1186!1178!1170!1162!1154!1148!1144!1140!1136!1131!1127!1123!1118!1114!1107!1099!1090!1082!1074!1069!1064!1058!1053!1048!1043!1038!1034!1029!1025!1021!1017!1013!1009!1005!1001!997!994!990!991!992!994!996!997!999!998!997!996!995!994!993!991!990!989!989!989!989!989!989!989!988!986!984!983!981!980!982!984!986!988!990!993!995!997!999!1002!1005!1008!1012!939!940!941!942!944!945!946!947!951!956!962!967!973!978!983!989!994!1000!1005!1015!1024!1034!1043!1053!1062!1075!1087!1100!1112!1121!1126!1131!1136!1141!1146!1151!1156!1164!1172!1179!1187!1194!1202!1209!1216!1222!1229!1235!1241!1248!1254!1260!1264!1268!1271!1275!1279!1283!1287!1286!1284!1281!1279!1276!1274!1271!1268!1266!1263!1261!1258!1256!1253!1251!1246!1242!1237!1232!1227!1222!1218!1215!1211!1207!1203!1199!1195!1191!1184!1178!1171!1165!1159!1152!1146!1141!1136!1130!1125!1120!1115!1110!1103!1096!1088!1080!1073!1065!1057!1049!1040!1030!1021!1012!1004!995!987!982!978!974!970!966!963!959!955!952!949!945!942!939!938!939!940!941!943!944!945!946!946!946!946!946!946!946!946!947!950!952!954!956!958!960!962!964!965!965!965!965!965!965!963!960!957!954!951!947!944!941!938!932!926!920!913!907!901!894!885!865!820!733!606!555!507!632!697!752!807!896!977!1023!1069!1127!1237!1347!1457!2085!2246!2474!2549!2595!2641!2695!3083!3135!3187!3217!3315!3403!3492!3581!3804!3847!3890!3798!3443!3453!3297!3053!2819!2810!2225!2258!1892!1734!1625!998!903!355!376!203!30!33!61!90!119!160!238!275!292!309!325!343!371!399!429!484!542!602!652!703!758!802!838!856!875!895!917!938!967!1016!1035!1041!1047!1054!1060!1066!1066!1064!1061!1058!1056!1053!1051!1048!1046!1043!1041!1038!1035!1033!1030!1028!1025!1022!1019!1017!1014!1011!1008!1006!1003!1001!999!998!996!994!993!991!990!988!986!985!983!981!978!976!973!971!968!966!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!964!965!966!967!968!969!970!971!972!974!976!978!980!983!985!987!989!991!993!995!997!999!1002!1006!1011!1015!1019!1023!1028!1032!1036!1040!1045!1050!1055!1059!1064!1069!1076!1082!1088!1095!1101!1107!1114!1120!1126!1132!1141!1149!1158!1166!1173!1178!1183!1188!1193!1198!1203!1208!1214!1221!1227!1233!1240!1246!1250!1254!1259!1263!1269!1278!1286!1294!1303!1309!1315!1322!1328!1334!1341!1343!1345!1347!1349!1351!1353!1355!1357!1359!1359!1359!1359!1359!1358!1356!1354!1352!1350!1347!1345!1343!1341!1339!1336!1334!1332!1329!1327!1324!1322!1320!1317!1315!1312!1307!1301!1294!1288!1281!1275!1270!1265!1260!1256!1251!1246!1240!1233!1227!1221!1214!1208!1201!1194!1186!1178!1170!1162!1154!1148!1144!1140!1136!1131!1127!1123!1118!1114!1107!1099!1090!1082!1074!1069!1064!1058!1053!1048!1043!1038!1034!1029!1025!1021!1017!1013!1009!1005!1001!997!994!990!991!992!994!996!997!999!998!997!996!995!994!993!991!990!989!989!989!989!989!989!989!988!986!984!983!981!980!982!984!986!988!990!993!995!997!999!1002!1005!1008!1012!939!940!941!942!944!945!946!947!951!956!962!967!973!978!983!989!994!1000!1005!1015!1024!1034!1043!1053!1062!1075!1087!1100!1112!1121!1126!1131!1136!1141!1146!1151!1156!1164!1172!1179!1187!1194!1202!1209!1216!1222!1229!1235!1241!1248!1254!1260!1264!1268!1271!1275!1279!1283!1287!1286!1284!1281!1279!1276!1274!1271!1268!1266!1263!1261!1258!1256!1253!1251!1246!1242!1237!1232!1227!1222!1218!1215!1211!1207!1203!1199!1195!1191!1184!1178!1171!1165!1159!1152!1146!1141!1136!1130!1125!1120!1115!1110!1103!1096!1088!1080!1073!1065!1057!1049!1040!1030!1021!1012!1004!995!987!982!978!974!970!966!963!959!955!952!949!945!942!939!938!939!940!941!943!944!945!946!946!946!946!946!946!946!946!947!950!952!954!956!958!960!962!964!965!965!965!965!965!965!963!960!957!954!951!947!944!941!938!932!926!920!913!907!901!894!885!865!820!733!606!555!507!632!697!752!807!896!977!1023!1069!1127!1237!1347!1457!2085!2246!2474!2549!2595!2641!2695!3083!3135!3187!3217!3315!3403!3492!3581!3804!3847!3890!3798!3443!3453!3297!3053!2819!2810!2225!2258!1892!1734!1625!998!903!355!376!203!30!33!61!90!119!160!238!275!292!309!325!343!371!399!429!484!542!602!652!703!758!802!838!856!875!895!917!938!967!1016!1035!1041!1047!1054!1060!1066!1066!1064!1061!1058!1056!1053!1051!1048!1046!1043!1041!1038!1035!1033!1030!1028!1025!1022!1019!1017!1014!1011!1008!1006!1003!1001!999!998!996!994!993!991!990!988!986!985!983!981!978!976!973!971!968!966!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!964!965!966!967!968!969!970!971!972!974!976!978!980!983!985!987!989!991!993!995!997!999!1002!1006!1011!1015!1019!1023!1028!1032!1036!1040!1045!1050!1055!1059!1064!1069!1076!1082!1088!1095!1101!1107!1114!1120!1126!1132!1141!1149!1158!1166!1173!1178!1183!1188!1193!1198!1203!1208!1214!1221!1227!1233!1240!1246!1250!1254!1259!1263!1269!1278!1286!1294!1303!1309!1315!1322!1328!1334!1341!1343!1345!1347!1349!1351!1353!1355!1357!1359!1359!1359!1359!1359!1358!1356!1354!1352!1350!1347!1345!1343!1341!1339!1336!1334!1332!1329!1327!1324!1322!1320!1317!1315!1312!1307!1301!1294!1288!1281!1275!1270!1265!1260!1256!1251!1246!1240!1233!1227!1221!1214!1208!1201!1194!1186!1178!1170!1162!1154!1148!1144!1140!1136!1131!1127!1123!1118!1114!1107!1099!1090!1082!1074!1069!1064!1058!1053!1048!1043!1038!1034!1029!1025!1021!1017!1013!1009!1005!1001!997!994!990!991!992!994!996!997!999!998!997!996!995!994!993!991!990!989!989!989!989!989!989!989!988!986!984!983!981!980!982!984!986!988!990!993!995!997!999!1002!1005!1008!1012!939!940!941!942!944!945!946!947!951!956!962!967!973!978!983!989!994!1000!1005!1015!1024!1034!1043!1053!1062!1075!1087!1100!1112!1121!1126!1131!1136!1141!1146!1151!1156!1164!1172!1179!1187!1194!1202!1209!1216!1222!1229!1235!1241!1248!1254!1260!1264!1268!1271!1275!1279!1283!1287!1286!1284!1281!1279!1276!1274!1271!1268!1266!1263!1261!1258!1256!1253!1251!1246!1242!1237!1232!1227!1222!1218!1215!1211!1207!1203!1199!1195!1191!1184!1178!1171!1165!1159!1152!1146!1141!1136!1130!1125!1120!1115!1110!1103!1096!1088!1080!1073!1065!1057!1049!1040!1030!1021!1012!1004!995!987!982!978!974!970!966!963!959!955!952!949!945!942!939!938!939!940!941!943!944!945!946!946!946!946!946!946!946!946!947!950!952!954!956!958!960!962!964!965!965!965!965!965!965!963!960!957!954!951!947!944!941!938!932!926!920!913!907!901!894!885!865!820!733!606!555!507!632!697!752!807!896!977!1023!1069!1127!1237!1347!1457!2085!2246!2474!2549!2595!2641!2695!3083!3135!3187!3217!3315!3403!3492!3581!3804!3847!3890!3798!3443!3453!3297!3053!2819!2810!2225!2258!1892!1734!1625!998!903!355!376!203!30!33!61!90!119!160!238!275!292!309!325!343!371!399!429!484!542!602!652!703!758!802!838!856!875!895!917!938!967!1016!1035!1041!1047!1054!1060!1066!1066!1064!1061!1058!1056!1053!1051!1048!1046!1043!1041!1038!1035!1033!1030!1028!1025!1022!1019!1017!1014!1011!1008!1006!1003!1001!999!998!996!994!993!991!990!988!986!985!983!981!978!976!973!971!968!966!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!963!964!965!966!967!968!969!970!971!972!974!976!978!980!983!985!987!989!991!993!995!997!999!1002!1006!1011!1015!1019!1023!1028!1032!1036!1040!1045!1050!1055!1059!1064!1069!1076!1082!1088!1095!1101!1107!1114!1120!1126!1132!1141!1149!1158!1166!1173!1178!1183!1188!1193!1198!1203!1208!1214!1221!1227!1233!1240!1246!1250!1254!1259!1263!1269!1278!1286!1294!1303!1309!1315!1322!1328!1334!1341!1343!1345!1347!1349!1351!1353!1355!1357!1359!1359!1359!1359!1359!1358!1356!1354!1352!1350!1347!1345!1343!1341!1339!1336!1334!1332!1329!1327!1324!1322!1320!1317!1315!1312!1307!1301!1294!1288!1281!1275!1270!1265!1260!1256!1251!1246!1240!1233!1227!1221!1214!1208!1201!1194!1186!1178!1170!1162!1154!1148!1144!1140!1136!1131!1127!1123!1118!1114!1107!1099!1090!1082!1074!1069!1064!1058!1053!1048!1043!1038!1034!1029!1025!1021!1017!1013!1009!1005!1001!997!994!990!991!992!994!996!997!999!998!997!996!995!994!993!991!990!989!989!989!989!989!989!989!988!986!984!983!981!980!982!984!986!988!990!993!995!997!999!1002!1005!1008!1012";
QString deneme32="68!47!35!34!37!44!52!52!51!50!50!51!51!49!48!46!47!44!43!44!49!21!13!12!22!34!45!59!53!49!47!47!58!49!45!44!45!59!50!46!45!47!61!53!48!47!47!75!92!89!75!59!29!7!8!21!36!62!60!54!50!48!58!54!47!44!44!56!55!49!47!46!51!56!48!45!45!46!57!50!46!45!45!57!50!46!44!45!58!51!47!47!48!79!91!84!67!56!21!0!0!15!35!65!65!61!57!54!67!58!50!47!47!62!56!50!47!47!56!56!49!46!46!51!58!50!46!46!46!57!50!46!45!46!58!51!47!46!47!81!94!89!75!51!25!8!12!25!39!62!58!53!50!49!64!55!49!47!46!60!54!49!47!47!61!55!49!46!46!55!56!50!47!46!49!57!50!47!46!46!57!48!45!44!45!81!90!83!70!42!20!7!14!30!44!66!60!54!51!49!62!53!47!46!46!62!54!48!46!47!62!55!49!46!46!59!54!49!47!47!54!56!49!46!45!48!56!49!46!46!47!82!91!83!68!37!17!6!14!28!64!15!4!0!0!0!0!39!51!55!56!54!80!60!45!39!39!64!54!46!43!43!58!53!48!45!45!54!86!88!76!64!32!13!8!18!32!47!59!54!50!49!48!58!50!47!46!46!59!51!46!45!46!58!51!46!46!47!60!52!48!47!48!62!53!47!45!46!61!54!48!46!46!62!88!89!78!65!33!11!10!21!35!53!60!54!50!48!50!57!51!47!47!48!59!51!47!46!47!59!51!47!46!48!61!53!48!47!47!60!52!47!45!45!60!52!48!46!47!67!89!88!76!66!33!10!10!22!37!60!61!55!50!48!54!55!49!47!47!50!58!51!47!47!47!58!51!46!46!47!59!51!47!46!47!60!52!48!47!47!60!52!47!46!47!71!90!88!75!62!32!10!11!23!38!62!60!54!51!49!59!55!48!45!45!52!57!51!48!47!48!58!50!48!47!48!60!56!57!62!69!97!97!97!56!3!0!0!0!0!0!0!0!48!85!98!98!98!98!98!98!98!98!97!98!97!97!98!98!97!97!98!97!97!97!5!0!0!0!0!59!43!38!47!55!60!62!62!65!60!57!55!54!51!51!51!51!50!45!41!41!43!40!24!11!14!26!39!61!59!52!48!47!61!56!49!45!44!53!56!50!47!47!49!56!48!44!43!44!56!48!44!43!45!58!50!46!43!43!77!90!86!73!51!24!4!7!21!36!61!57!52!49!47!61!53!46!45!46!62!55!48!45!45!57!54!47!44!44!52!56!49!46!45!47!56!48!45!44!45!57!50!47!47!47!82!92!84!70!45!21!6!12!25!39!63!59!53!49!47!61!51!46!44!46!62!54!48!45!45!60!53!48!46!46!58!55!48!46!46!53!58!51!47!46!48!58!51!48!47!48!87!92!82!68!51!23!5!9!24!39!61!57!53!49!48!62!53!48!46!46!61!54!48!46!46!62!54!49!47!47!62!55!49!47!48!59!57!50!46!46!52!58!51!47!46!51!87!94!84!70!59!29!5!6!21!38!60!58!54!51!50!62!52!47!46!47!63!54!48!47!47!63!53!48!46!47!63!55!49!46!46!60!55!49!47!47!56!57!51!92!57!35!27!31!40!48!53!54!53!51!48!48!45!53!51!49!49!48!48!44!44!46!34!22!10!15!28!42!64!58!53!49!47!61!52!46!44!45!61!55!49!46!45!56!87!90!80!64!31!12!6!19!34!51!62!55!51!48!48!57!49!45!45!46!59!51!47!45!46!59!51!47!45!45!60!52!47!45!46!61!53!47!45!46!61!53!48!47!48!65!91!91!79!68!34!11!6!17!33!56!62!56!51!48!51!56!48!45!45!46!58!50!47!47!48!61!52!47!46!46!60!52!47!46!47!61!52!47!46!46!61!53!48!46!47!69!91!90!77!66!33!11!10!21!36!56!62!55!50!48!54!54!48!45!46!51!58!51!47!46!47!58!50!47!46!46!59!51!47!46!47!60!52!47!46!47!62!52!47!45!46!72!92!90!77!65!34!9!7!20!37!63!64!57!53!49!61!55!47!44!44!52!56!50!48!48!51!59!51!47!46!47!59!51!47!46!48!60!51!47!46!47!61!53!48!46!47!76!92!88!75!57!28!7!9!23!39!64!61!89!51!31!30!38!42!49!50!53!53!51!50!50!51!53!53!49!49!50!52!49!44!44!46!24!16!11!19!32!44!84!97!90!74!48!18!4!10!25!41!64!59!53!49!48!62!52!47!46!46!61!53!47!46!46!61!55!48!45!46!59!55!48!45!45!53!56!48!45!45!48!56!49!46!45!46!82!91!83!69!43!21!7!14!29!43!63!58!53!50!49!61!52!48!47!48!63!54!48!46!46!62!54!49!46!46!59!53!48!46!46!59!56!49!46!46!53!57!50!47!46!49!84!92!84!69!37!17!6!14!30!45!64!58!53!50!48!60!51!47!46!47!62!53!49!47!48!64!54!48!45!46!61!55!49!47!47!62!55!49!47!47!59!56!49!46!47!53!88!93!83!68!33!14!6!16!33!47!66!58!52!49!48!60!52!47!45!46!60!52!48!46!47!62!54!49!48!48!62!53!48!46!47!63!55!49!46!46!61!55!49!46!47!56!89!91!81!67!34!14!7!17!32!47!64!58!51!48!47!58!50!46!46!47!60!52!47!46!46!89!27!34!39!46!52!54!53!52!51!50!54!51!48!46!48!48!49!50!49!46!46!47!45!13!7!18!40!45!48!51!53!60!50!46!45!45!58!50!46!45!46!79!91!86!72!55!27!7!9!23!38!63!59!54!50!48!62!52!47!45!45!60!53!47!46!46!60!56!49!46!46!53!57!51!46!45!48!56!49!46!46!48!57!50!47!46!46!81!91!84!71!46!22!7!12!27!42!66!60!54!49!48!61!52!46!45!46!62!54!48!46!46!62!55!49!46!46!58!56!49!46!46!51!56!50!47!47!52!56!49!45!44!46!83!93!85!71!40!20!8!15!29!43!64!58!53!50!49!62!52!47!45!46!61!53!49!47!48!63!54!49!47!47!62!55!49!46!47!57!56!49!47!46!56!56!50!47!48!52!87!92!82!68!38!16!6!14!30!43!64!58!53!50!49!61!52!47!46!47!62!53!48!47!48!62!53!48!46!47!61!53!48!46!47!62!56!50!47!47!56!54!48!45!46!52!88!92!81!66!31!12!6!17!33!47!64!58!52!49!48!81!46!29!32!41!51!53!53!51!50!49!49!50!51!51!49!48!50!49!45!44!45!41!13!10!20!70!89!87!75!46!23!9!14!28!42!64!59!54!50!49!62!52!46!45!46!63!55!50!47!47!62!54!48!46!46!61!55!49!46!46!56!56!49!46!45!50!63!51!45!44!45!82!91!82!68!37!18!8!17!31!45!62!57!53!50!49!60!52!47!46!47!60!53!49!48!48!61!53!47!45!47!61!55!50!48!47!58!54!48!46!46!52!55!49!47!47!48!83!90!82!67!32!15!8!18!32!45!61!56!52!49!47!56!48!45!45!47!61!54!49!47!48!61!53!48!47!47!60!53!48!47!48!60!53!48!46!46!57!54!49!47!47!52!86!90!80!67!32!12!8!19!34!48!62!57!52!49!47!57!50!47!46!47!58!51!47!46!47!60!53!48!46!47!60!53!49!48!48!61!53!47!45!46!59!54!49!46!46!56!88!91!80!64!32!13!9!20!35!49!60!56!52!50!49!57!50!46!46!47!58!51!48!47!48!59!52!48!46!46!88!51!31!28!35!43!54!55!54!52!51!56!53!50!48!49!49!50!48!46!46!48!29!11!13!26!46!57!55!52!50!52!58!50!46!45!46!56!50!47!47!48!60!53!48!47!47!59!52!49!48!49!61!53!48!47!47!71!91!89!76!63!31!10!10!23!39!60!62!56!51!49!58!54!48!46!46!52!56!50!47!47!48!56!50!47!47!48!58!51!48!47!48!58!51!48!47!48!59!51!47!46!47!74!90!85!73!57!29!10!11!24!38!61!60!55!50!48!59!52!47!46!46!56!55!49!46!46!51!57!50!47!46!47!56!50!46!46!46!57!50!47!47!48!58!51!47!46!47!77!92!87!74!53!25!7!11!25!40!63!59!54!50!48!60!53!47!46!46!58!53!47!46!46!55!55!49!46!46!49!55!49!47!47!48!58!51!47!47!48!58!51!48!47!48!80!92!86!72!47!23!8!14!28!42!63!59!54!51!49!61!52!47!46!46!60!54!49!47!46!59!55!50!48!47!54!55!49!47!47!49!56!50!47!47!50!58!51!48!46!17!4!15!29!43!52!55!57!55!54!53!50!53!49!48!49!50!51!51!47!45!46!50!21!8!14!27!53!56!55!53!52!59!55!48!45!45!50!86!91!81!63!31!13!7!17!33!46!62!56!52!49!48!58!50!46!45!47!59!52!47!46!47!59!51!47!45!46!60!54!49!46!47!60!53!49!47!47!59!54!49!47!47!55!88!90!79!67!33!12!8!19!34!48!61!55!51!49!48!56!48!45!44!45!56!50!46!46!46!58!50!47!47!48!61!53!48!47!47!59!52!47!45!46!60!53!47!46!46!61!88!90!79!66!33!10!9!20!35!52!61!56!52!50!51!58!51!47!47!47!57!50!46!45!46!58!51!48!48!49!60!52!48!47!47!59!52!48!46!47!60!53!48!46!47!66!90!90!77!66!33!10!10!23!37!59!60!55!52!49!53!55!49!47!47!48!56!49!46!46!47!58!51!47!47!48!59!52!49!48!47!58!51!47!45!46!58!50!46!45!46!69!90!87!75!62!32!10!11!25!40!63!61!55!51!49!58!55!48!46!78!46!30!32!35!43!50!52!53!53!52!51!50!50!51!51!51!49!49!49!46!46!48!41!13!8!19!33!58!56!53!51!49!61!53!47!45!46!59!53!48!46!46!57!52!47!46!47!59!55!49!47!47!53!55!49!46!46!48!56!50!47!47!47!58!51!47!46!47!80!89!82!68!43!21!8!14!28!42!63!59!54!50!48!59!51!46!45!46!60!54!48!47!48!61!55!49!47!47!57!54!49!47!46!51!54!48!46!45!47!56!50!47!46!46!80!89!81!68!39!20!9!17!31!44!63!58!53!50!48!60!51!47!45!46!60!53!48!47!48!61!54!49!47!47!60!54!49!46!46!56!55!50!48!48!52!57!50!47!46!47!83!91!83!68!35!16!7!17!32!45!63!57!52!49!48!59!51!47!46!47!60!53!49!49!49!62!54!48!47!47!61!54!49!47!48!60!55!49!46!46!55!55!49!46!47!50!86!92!83!69!35!15!9!19!34!48!64!58!53!50!49!58!50!45!44!46!59!52!49!47!48!60!53!50!49!49!62!53!48!81!43!0!0!0!9!29!46!69!98!97!87!69!55!48!44!43!47!49!47!46!47!47!26!19!15!24!36!46!62!56!52!49!48!59!51!47!46!46!59!51!46!45!46!59!52!47!46!46!59!52!48!47!47!64!89!89!77!65!32!11!9!21!36!51!61!56!51!48!50!54!48!46!46!47!57!51!47!46!47!57!50!47!47!48!60!53!49!47!48!60!53!48!46!47!59!52!48!47!48!69!89!87!75!64!33!11!11!24!39!59!62!56!51!49!55!54!48!46!46!50!57!51!48!47!47!56!50!47!47!48!59!52!47!46!47!59!51!47!46!47!59!52!49!48!48!73!91!88!76!60!30!9!11!24!39!61!61!55!51!49!59!54!48!46!46!53!56!50!47!47!50!57!50!47!46!47!57!51!48!47!48!59!52!48!48!48!58!52!48!47!47!74!90!86!74!57!29!10!13!26!41!65!61!54!50!48!58!53!48!45!45!56!53!48!46!46!52!55!49!46!47!49!57!50!47!46!46!56!49!46!45!47!58!51!46!44!41!61!55!0!0!0!0!0!0!22!77!97!97!97!97!97!97!97!97!97!97!97!97!97!97!97!97!92!73!65!67!79!97!97!98!97!97!97!97!97!97!97!98!97!97!97!97!98!97!97!98!97!97!97!97!97!98!98!97!98!97!97!97!98!98!97!97!98!97!97!98!97!97!98!97!98!97!97!98!98!98!98!97!98!97!97!98!98!98!97!97!97!97!97!98!98!98!77!61!71!62!58!59!62!83!67!49!37!37!58!64!73!80!83!94!77!59!48!46!60!57!50!47!45!51!49!42!45!53!68!72!61!58!61!72!92!90!88!84!78!97!98!97!97!97!72!35!22!24!33!58!59!57!54!52!65!56!47!43!40!51!43!38!38!38!53!48!42!41!44!57!54!46!42!41!53!54!48!43!41!47!53!46!45!52!63!82!77!69!61!55!87!97!90!77!56!32!13!14!25!37!60!57!54!51!50!63!53!45!42!41!56!50!45!44!43!57!52!46!42!40!54!51!46!43!42!53!52!46!43!44!52!61!58!61!65!67!97!97!97!95!62!33!97!81!60!46!41!43!42!43!43!47!50!51!51!50!50!53!51!47!45!41!39!39!39!7!0!15!24!31!38!44!59!67!65!65!64!60!95!97!89!74!43!21!6!9!20!33!57!55!53!52!50!61!50!44!41!40!54!47!44!43!45!60!53!46!43!42!57!50!43!39!38!53!48!44!43!43!56!52!45!45!50!61!97!98!98!88!55!28!8!8!17!29!52!51!49!48!47!60!52!47!46!46!60!51!45!42!41!56!49!44!42!43!60!54!49!46!46!60!53!45!41!41!55!50!44!42!43!58!94!97!97!88!49!19!4!8!22!39!58!54!49!46!45!59!51!48!46!45!58!50!45!42!41!56!49!44!43!42!58!51!46!45!45!59!51!44!40!39!55!51!47!45!45!64!94!97!96!90!58!31!18!20!29!44!56!52!46!43!42!51!40!36!36!39!52!45!40!36!34!46!35!28!24!23!40!33!24!17!14!29!25!24!26!30!46!39!34!31!30!54!81!85!76!65!28!3!2!17!36!62!67!59!53!48!52!56!47!42!41!47!71!26!12!0!0!0!0!0!0!0!0!0!1!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!26!96!97!97!98!97!97!97!97!98!97!88!68!55!51!67!58!51!49!47!62!54!49!51!53!67!56!46!39!38!54!51!44!40!40!56!94!97!97!85!49!21!5!8!20!40!65!71!75!75!73!81!66!55!49!46!60!53!48!47!47!64!57!53!53!53!68!58!50!46!46!63!56!52!51!49!62!54!46!43!44!64!96!97!85!74!40!11!2!10!24!45!59!57!56!57!62!71!57!49!47!52!73!67!58!45!20!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!43!57!66!68!65!83!97!97!97!83!47!16!7!11!20!35!17!0!0!0!0!0!0!0!0!0!0!0!41!79!98!97!97!91!77!66!71!58!53!53!55!70!62!55!52!53!69!61!55!53!54!81!97!97!87!74!43!14!10!22!37!64!65!60!55!52!62!57!49!46!46!54!58!50!47!47!50!60!52!48!49!54!97!97!97!97!97!97!97!74!49!37!37!40!46!50!54!54!52!55!51!48!46!46!47!45!43!44!47!34!4!0!11!27!54!53!51!49!48!62!52!46!45!46!63!58!56!57!59!87!97!97!94!78!42!12!5!15!31!58!62!57!54!53!64!59!50!46!45!53!57!50!46!46!49!59!50!48!47!47!61!52!47!46!46!60!50!45!44!44!60!52!48!46!48!80!97!97!95!80!45!16!11!19!32!59!59!54!51!49!64!56!49!46!46!58!56!48!44!43!49!56!48!44!44!47!58!50!46!46!46!58!48!44!42!43!57!49!45!44!45!79!95!90!75!53!23!3!9!27!46!75!73!65!57!51!63!53!46!43!44!59!55!50!48!48!59!58!49!44!44!49!56!47!42!40!41!53!47!45!44!45!56!48!44!43!41!75!85!75!56!26!0!0!0!0!0!0!0!0!0!0!97!98!98!98!98!98!98!98!98!98!98!98!98!98!97!98!98!98!97!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!97!98!97!98!82!86!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!97!98!98!98!98!98!98!98!98!98!92!77!54!41!35!34!47!43!40!38!38!50!46!43!44!51!68!0!0!0!0!0!48!98!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!0!28!47!57!75!65!54!48!44!55!88!93!85!76!43!17!4!10!23!38!57!53!51!50!49!61!49!43!41!42!58!52!49!48!46!60!50!45!43!43!59!51!45!43!44!62!55!50!51!55!72!64!54!49!48!68!96!97!87!73!46!12!0!6!22!44!59!56!52!50!50!59!48!43!42!43!58!50!45!44!43!58!49!42!38!37!53!46!42!40!39!55!47!40!38!38!57!52!50!52!55!82!97!97!97!84!45!12!1!8!23!48!58!56!54!52!57!61!52!47!46!48!60!52!47!45!44!54!45!42!42!42!57!48!43!41!25!25!32!38!44!52!60!65!65!63!60!57!55!51!50!50!50!49!52!50!45!44!46!43!10!1!8!21!49!51!50!48!46!60!49!44!42!43!60!52!46!43!43!59!53!46!43!42!57!91!96!86!73!36!9!2!14!33!57!69!62!55!52!51!60!50!45!43!44!60!52!48!47!48!63!53!47!44!44!59!52!48!44!42!58!49!44!41!41!58!51!45!43!43!63!92!93!82!72!38!8!0!7!22!44!60!61!62!62!66!67!55!48!46!47!58!50!46!45!45!60!52!48!47!47!62!53!47!45!45!67!51!41!38!39!58!50!45!42!43!69!95!96!84!71!33!4!0!9!25!50!57!52!48!46!58!59!54!53!54!58!63!53!46!45!46!58!50!45!44!45!61!52!48!47!47!62!52!45!43!43!58!50!45!44!44!73!95!94!81!66!30!3!0!11!27!55!57!52!48!46!56!53!44!41!42!56!61!56!53!52!54!60!50!45!45!46!59!50!46!46!47!62!53!47!45!45!60!51!45!43!44!76!96!93!79!60!26!2!1!13!97!66!30!29!31!38!44!52!59!60!59!57!55!52!51!50!50!53!50!42!40!43!49!14!1!7!21!49!53!52!50!48!66!95!97!84!72!35!7!0!9!25!50!57!52!49!47!51!56!47!43!43!46!58!48!43!41!41!59!55!53!53!53!68!56!49!45!45!60!52!46!45!46!63!54!49!47!46!70!95!94!81!71!37!8!1!11!26!54!57!53!50!48!57!56!47!43!42!47!56!48!44!43!44!56!48!44!42!42!57!51!49!51!53!67!56!49!46!46!61!52!47!45!46!75!97!97!85!71!37!8!3!13!28!55!57!52!48!48!62!57!49!45!45!56!59!52!48!46!49!57!47!42!41!41!54!43!34!26!24!48!57!62!58!0!0!0!0!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!99!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!99!98!98!98!98!99!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!98!99!97!89!70!59!53!51!52!51!53!49!53!56!57!57!58!55!63!64!63!77!94!98!94!83!65!55!58!59!59!56!47!55!59!60!60!47!54!58!60!59!45!52!57!59!59!45!52!57!59!59!45!51!57!59!59!44!50!56!58!59!44!48!55!58!59!42!10!8!18!31!61!89!98!94!82!62!49!51!53!54!53!29!48!60!64!64!50!55!57!58!57!43!50!56!58!58!44!51!56!58!58!43!50!56!58!58!43!49!55!58!58!43!48!55!58!58!46!11!6!15!28!63!88!96!90!77!60!48!51!53!54!54!43!51!56!58!57!43!51!56!57!56!43!50!55!56!56!42!49!55!57!57!42!49!54!57!57!43!48!54!57!57!39!11!6!16!24!61!89!97!90!77!55!46!49!51!53!48!43!51!56!57!57!44!51!55!55!55!42!51!56!58!57!42!50!55!57!56!41!49!54!56!56!42!48!54!56!57!32!9!6!16!25!67!91!96!88!75!50!45!49!51!53!45!44!52!56!57!52!44!52!56!57!56!43!51!23!53!67!70!62!60!56!52!52!46!50!52!54!53!52!51!50!51!59!61!60!50!87!98!80!74!69!63!58!40!44!51!55!56!41!46!54!57!58!47!46!53!57!57!51!45!52!56!57!56!43!51!56!57!57!43!51!56!57!57!21!6!9!22!46!74!95!96!86!72!47!47!50!51!51!39!47!55!58!58!43!47!54!56!57!42!46!53!56!57!47!45!52!56!57!51!44!51!56!57!56!43!49!52!53!53!16!4!10!23!52!79!96!94!83!69!46!47!51!53!53!39!47!54!57!57!42!47!52!54!54!41!46!53!56!55!41!45!53!57!57!47!44!52!55!56!51!43!51!55!56!53!15!4!10!23!55!79!96!93!82!68!45!48!51!53!53!39!47!54!56!54!40!47!54!57!57!42!47!53!56!56!41!46!52!54!54!42!46!55!58!58!48!44!51!55!56!52!14!3!11!25!62!85!98!94!81!67!44!46!50!51!52!39!48!55!57!57!42!48!54!56!56!41!48!54!56!56!42!47!53!56!56!42!46!53!56!56!45!45!21!50!66!70!67!58!57!55!54!52!50!51!50!51!51!52!51!52!51!58!61!59!56!84!98!82!78!71!63!57!39!45!50!53!54!40!47!54!56!56!41!47!54!56!56!32!8!5!15!23!64!91!98!91!77!56!44!48!50!52!48!41!51!56!57!54!43!51!55!56!56!42!50!55!56!56!41!49!54!56!56!41!48!54!56!56!41!47!54!56!56!29!7!5!15!26!65!91!96!88!75!52!46!49!51!52!45!42!51!55!57!54!44!51!55!56!54!42!50!54!54!53!41!50!56!57!56!41!48!54!56!55!40!47!53!56!56!30!1!5!19!33!47!91!98!97!83!54!48!50!51!52!41!43!51!55!56!49!43!51!56!56!50!39!50!56!58!57!44!51!54!54!53!41!50!55!57!56!41!49!54!56!56!26!5!8!20!39!73!95!96!86!72!46!44!48!50!50!37!45!54!58!58!47!46!53!56!56!46!44!52!56!57!51!43!51!55!56!56!42!50!55!57!56!42!49!55!56!56!22!4!7!21!39!73!96!97!86!72!46!66!29!0!1!27!49!52!52!51!51!68!52!42!40!43!58!49!44!44!45!82!92!86!71!43!20!5!10!24!38!62!58!54!51!50!63!52!46!44!45!61!53!47!45!45!61!53!47!45!45!58!54!48!45!44!52!55!48!46!45!51!55!48!45!45!47!85!92!83!69!36!14!3!10!25!39!61!56!51!47!46!59!50!45!44!46!62!54!48!46!46!62!53!47!45!45!61!54!48!45!45!58!55!48!45!44!51!54!47!45!44!50!86!91!82!68!33!15!6!14!28!41!61!56!52!49!48!60!50!45!44!46!60!52!48!46!47!62!54!49!46!46!62!53!47!45!45!61!54!48!46!46!58!56!49!46!46!55!89!92!81!69!32!13!6!15!30!43!61!56!51!48!47!58!50!45!44!45!60!50!46!45!46!60!51!46!45!45!61!54!49!47!47!63!54!48!46!46!61!55!48!46!46!62!90!92!80!67!33!12!7!17!32!48!61!56!51!49!47!57!49!45!45!46!59!52!47!46!46!59!50!45!44!45!59!51!46!45!46!";
Dialog *dialog;
QString hasta,kimlik,ekgverisi;
QString istek,client_ip;
int sayac1,sayac2;
MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    qDebug() << "Sunucu/is parcacigi : Veri tabani olusturuluyor";
/*
    QSqlDatabase db = QSqlDatabase::addDatabase("QPSQL");
    db.setDatabaseName("onlinehastalar");
    db.setHostName("192.168.173.1");
    db.setUserName("hasta");
    db.setPassword("hasta");
    db.setPort(5555);
    if (!db.open()) {
        qDebug() << "Databaseye Erisirken Hata Olustu";
        qDebug() << db.lastError().databaseText();

        }
    else {
         qDebug() << "Online Hasta Veritabanina Baglanildi.";
    }

*/

    QMainWindow::maximumSize();
    timer  =new QTimer(this);
    timer2 = new QTimer(this);
    timer->setInterval(3000);
    timer2->setInterval(3000);
    connect(timer,SIGNAL(timeout()),SLOT(veriiste()));
    connect(timer2,SIGNAL(timeout()),SLOT(grafikciz()));


    QPixmap pixmap(":/resources/logo.png");
    ui->label->setPixmap(pixmap);
    ui->label->setMask(pixmap.mask());
    ui->label->setScaledContents(true);
    ui->label->show();

    QPixmap pixmap5(":/resources/call.png");
    ui->label_23->setPixmap(pixmap5);
    ui->label_23->setMask(pixmap5.mask());
    ui->label_23->setScaledContents(true);
    ui->label_23->show();

    QPixmap pixmap2(":/resources/kalp.png");
    ui->label_12->setPixmap(pixmap2);
    ui->label_12->setMask(pixmap2.mask());
    ui->label_12->setScaledContents(true);
    ui->label_12->show();

    QPixmap pixmap3(":/resources/derece.png");
    ui->label_13->setPixmap(pixmap3);
    ui->label_13->setMask(pixmap3.mask());
    ui->label_13->setScaledContents(true);
    ui->label_13->show();

    QPixmap pixmap6(":/resources/oksijen.png");
    ui->label_22->setPixmap(pixmap6);
    ui->label_22->setMask(pixmap6.mask());
    ui->label_22->setScaledContents(true);
    ui->label_22->show();
}

MainWindow::~MainWindow()
{

    delete ui;
}

void MainWindow::veriiste() {
 QByteArray outByteArray,po;
    QModelIndexList list =ui->listView->selectionModel()->selectedIndexes();
    QStringList slist;
      foreach(const QModelIndex &index, list){
          slist.append( index.data(Qt::DisplayRole ).toString());
      }
     kimlik= slist[0];


      query = new QSqlQuery();
      QString nabiz,oksijen,hastasicaklik,odasicaklik,odanem,odaaydinlik;


          QString database_sec="";
          database_sec +="SELECT nabiz,oksijen,hastasicaklik,odasicaklik,odanem,odaaydinlik,ekgverisi,oksimetre,no FROM ";
          database_sec +=kimlik;
          database_sec +=" ORDER BY no;";
            qDebug() << "Veri cekiliyor..";
         if (query->exec(database_sec))
               {
               qDebug() << "Veri cekme Basarili";

             if (query->isActive()){
                 if (query->isSelect()){
                     if (query->last()){

                         nabiz = query->value(0).toString();
                         oksijen = query->value(1).toString();
                         hastasicaklik = query->value(2).toString();
                         odasicaklik = query->value(3).toString();
                         odanem = query->value(4).toString();
                         odaaydinlik = query->value(5).toString();

                 outByteArray = query->value( 6 ).toByteArray();
                 po=query->value( 7 ).toByteArray();
                     }
                 }
             }



           }
                   else
               {

                   qDebug() << query->lastError();
               }
   ui->label_21->setText(nabiz);
   ui->label_33->setText(oksijen);
   ui->label_35->setText(hastasicaklik);
   ui->label_27->setText(odanem);
 //  ui->label_26->setText(odaaydinlik);
   ui->label_29->setText(odasicaklik);



QVector<double> k(100),n(10000),y(1000);

for(int i =0;i<1000;i++) {
    y[i]=i;
}
           QString deneme = outByteArray;

           QStringList myStringList = deneme.split("!");

           std::cout<<"Splitting String \"A;B;C;D;E;F;G;H\" into\n"
                <<"QStringList with delimiter ';'...\n"
                <<"myStringList elements are :"<<std::endl;

           for(int index =0;index < myStringList.length();index++)

           {
               k[index] = myStringList.at(index).toFloat();


           }

           QString deneme2 = po;

           QStringList myStringList2 = deneme2.split("!");

           std::cout<<"Splitting String \"A;B;C;D;E;F;G;H\" into\n"
                <<"QStringList with delimiter ';'...\n"
                <<"myStringList elements are :"<<std::endl;

           for(int index =0;index < myStringList2.length();index++)

           {
               n[index] = myStringList2.at(index).toInt();


           }


/*
           ui->customplot->xAxis->grid()->setVisible(false);
           ui->customplot->yAxis->grid()->setVisible(false);
           ui->customplot->setBackground(QColor(0, 0, 0));
           ui->customplot->addGraph();
           ui->customplot->graph(0)->setData(y,k);
           ui->customplot->yAxis->setRange(0,100);
           ui->customplot->yAxis->setLabelColor(QColor(255, 00, 00));
           ui->customplot->yAxis->setTickLabelColor(QColor(255, 00, 00));
         ui->customplot->rescaleAxes(true);
           ui->customplot->graph(0)->setPen(QColor(0, 250, 0));
           ui->customplot->xAxis->setRange(0,500);
           ui->customplot->setInteractions(QCP::iRangeDrag | QCP::iRangeZoom | QCP::iSelectPlottables);
           ui->customplot->xAxis->setLabel("Pulse Oksimetre");
           ui->customplot->yAxis->setLabel("Pulse Oksimetre");
           ui->customplot->replot();

         */

           ui->customplot->xAxis->grid()->setVisible(true);
           ui->customplot->yAxis->grid()->setVisible(true);
         //ui->customplot->setBackground(QColor(0, 0, 0));
         ui->customplot->addGraph();
         ui->customplot->graph(0)->setData(y,k);
         ui->customplot->yAxis->setRange(-1,1);
         ui->customplot->yAxis->setLabelColor(QColor(255, 0, 0));

         ui->customplot->yAxis->setTickLabelColor(QColor(255, 00, 00));
         //ui->customplot->rescaleAxes(true);
         ui->customplot->graph(0)->setPen(QColor(250, 0, 0));
         ui->customplot->xAxis->setRange(0,3000);
         ui->customplot->setInteractions(QCP::iRangeDrag | QCP::iRangeZoom | QCP::iSelectPlottables);
         //ui->customplot->xAxis->setLabel("Olcum Sayisi");
         ui->customplot->yAxis->setLabel("Amplitute(mV)");
         ui->customplot->replot();


         ui->customplot_2->xAxis->grid()->setVisible(false);
         ui->customplot_2->yAxis->grid()->setVisible(false);
         //ui->customplot_2->setBackground(QColor(0, 0, 0));
         ui->customplot_2->addGraph();
         ui->customplot_2->graph(0)->setData(y,n);
         ui->customplot_2->yAxis->setRange(0,100);
         ui->customplot_2->yAxis->setLabelColor(QColor(255, 00, 00));
         ui->customplot_2->yAxis->setTickLabelColor(QColor(255, 00, 00));
       //  ui->customplot_2->rescaleAxes(true);
         ui->customplot_2->graph(0)->setPen(QColor(0, 250, 0));
         ui->customplot_2->xAxis->setRange(0,1000);
         ui->customplot_2->setInteractions(QCP::iRangeDrag | QCP::iRangeZoom | QCP::iSelectPlottables);
         ui->customplot_2->xAxis->setLabel("Pulse Oksimetre");
         ui->customplot_2->yAxis->setLabel("Oxygen%");
         ui->customplot_2->replot();



deneme="";
deneme2="";
}



void MainWindow::on_pushButton_4_clicked()
{
    timer->stop();
    query = new QSqlQuery();
liste = new QSqlQueryModel();
QString listekomutu = "SELECT tablename FROM pg_tables WHERE schemaname = 'public';";
bool ok =  query->exec( listekomutu);

 if(!ok){
    qDebug() << query->lastError().databaseText();
    // do something
}
 else
     qDebug() << "zaaxd";

liste->setQuery(*query);
ui->listView->setModel(liste);
qDebug() << liste->rowCount();
}


void MainWindow::grafikciz() {

int olcum_sikligi= ui->horizontalSlider->value();
QVector<double> k(10100),n(101000),y(100000);

for(int i =0;i<1000;i++) {
    y[i]=i;
}
query = new QSqlQuery();
QVector<double> nabiz(100000), oksijen(100000),hastasicaklik(100000),sira(100000);
QVector<double> odasicaklik(100000), odanem(100000);
 QByteArray ba,po;

int nb;
/*
   QString database_sec="";
   database_sec +="SELECT nabiz,oksijen,hastasicaklik,ekgverisi,oksimetre,no FROM ";
   database_sec +=kimlik;
 //  database_sec +=" ORDER BY no;";
     qDebug() << "Veri cekiliyor..";
  if (query->exec(database_sec))
        {
        qDebug() << "Veri cekme Basarili";
      nb = query->size();

    for( int i = 0; query->next(); i++ )
        {
nabiz[i] = query->value(0).toDouble();
oksijen[i] = query->value(1).toDouble();
hastasicaklik[i] = query->value(2).toDouble();
ba += query->value(3).toByteArray();
po += query->value(4).toByteArray();
sira[i] = query->value(5).toDouble();
    }
  }

            else
        {

            qDebug() << query->lastError();
        }

*/
QString deneme = QString(ba);
ba.clear();

    QStringList myStringList = deneme22.split("!");
    for(int index =0;index < myStringList.length();index++)

    {

        k[index] = myStringList.at(index).toFloat();
         //qDebug() << k[index];
    }

    QString deneme2 = QString(po);
    po.clear();

        QStringList myStringList2 = deneme32.split("!");
        for(int index =0;index < myStringList2.length();index++)

        {

             n[index] = myStringList2.at(index).toInt();

        }








    ui->customplot->xAxis->grid()->setVisible(true);
    ui->customplot->yAxis->grid()->setVisible(true);
  //ui->customplot->setBackground(QColor(0, 0, 0));
  ui->customplot->addGraph();
  ui->customplot->graph(0)->setData(y,k);
  ui->customplot->yAxis->setRange(-1,1);
  ui->customplot->yAxis->setLabelColor(QColor(255, 0, 0));

//  ui->customplot->yAxis->setTickLabelColor(QColor(255, 00, 00));
  ui->customplot->rescaleAxes(true);
  ui->customplot->graph(0)->setPen(QColor(250, 0, 0));
  ui->customplot->xAxis->setRange(0,1000);
  ui->customplot->setInteractions(QCP::iRangeDrag | QCP::iRangeZoom | QCP::iSelectPlottables);
  ui->customplot->xAxis->setLabel("Örnekleme Sayisi");
  ui->customplot->yAxis->setLabel("Amplitute(mV)");
  ui->customplot->replot();


  ui->customplot_2->xAxis->grid()->setVisible(false);
  ui->customplot_2->yAxis->grid()->setVisible(false);
  //ui->customplot_2->setBackground(QColor(0, 0, 0));
  ui->customplot_2->addGraph();
  ui->customplot_2->graph(0)->setData(y,n);
  ui->customplot_2->yAxis->setRange(0,100);
  ui->customplot_2->yAxis->setLabelColor(QColor(255, 00, 00));
  ui->customplot_2->yAxis->setTickLabelColor(QColor(255, 00, 00));
  ui->customplot_2->rescaleAxes(true);
  ui->customplot_2->graph(0)->setPen(QColor(0, 250, 0));
  ui->customplot_2->xAxis->setRange(0,500);
  ui->customplot_2->setInteractions(QCP::iRangeDrag | QCP::iRangeZoom | QCP::iSelectPlottables);
  ui->customplot_2->xAxis->setLabel("Örnekleme Sayısı");
  ui->customplot_2->yAxis->setLabel("Oxygen%");
  ui->customplot_2->replot();



deneme="";
deneme2="";




}

void MainWindow::on_pushButton_22_clicked()
{
/*
    QSqlQuery query;
timer->stop();

   if( !query.exec() )
      qDebug() << "Error inserting image into table:\n" << query.lastError();
  else
      qDebug() << "basari";

           QScreen *screen = QApplication::primaryScreen();

           QPixmap inPixmap = screen->grabWindow( 0 );
           QByteArray inByteArray;
           QBuffer inBuffer( &inByteArray );
           inBuffer.open( QIODevice::WriteOnly );
           inPixmap.save( &inBuffer, "PNG" ); // write inPixmap into inByteArray in PNG format


           query.prepare( "INSERT INTO imgTable (filename, imagedata) VALUES ('screenshot.png', :imageData)" );
               query.bindValue( ":imageData", inByteArray);
               qDebug() << query.exec(); // return tru
               if( !query.exec() )
                   qDebug() << "Error inserting image into table:\n" << query.lastError();
               else
                   qDebug() << "basari";
               // Get image data back from database
               if( !query.exec( "SELECT imagedata from imgTable" ))
                   qDebug() << "Error getting image from table:\n" << query.lastError();
               query.first();
               QByteArray outByteArray = query.value( 0 ).toByteArray();
               QPixmap outPixmap = QPixmap();
               outPixmap.loadFromData( outByteArray );
               ui->label->setPixmap(outPixmap);
               ui->label->show();



       QModelIndexList list =ui->listView->selectionModel()->selectedIndexes();
    QStringList slist;
      foreach(const QModelIndex &index, list){
          slist.append( index.data(Qt::DisplayRole ).toString());
      }
      qDebug() << slist.join(",");


     kimlik= slist[0];
     qDebug() << "Secilen kimlik :" + kimlik;


     QString tckimlikno,ad,soyad,tani,lokasyon,yas;
     int nb;

        QString database_sec="";
        database_sec +="SELECT tckimlikno,ad,soyad,yas,tani,lokasyon,no FROM ";
        database_sec +=kimlik;
        database_sec +=" ORDER BY no;";
          qDebug() << "Veri cekiliyor..";
          if (query.exec(database_sec))
                {
                qDebug() << "Veri cekme Basarili";

              if (query.isActive()){
                  if (query.isSelect()){
                      if (query.last()){

                          tckimlikno = query.value(0).toString();
                          ad = query.value(1).toString();
                          soyad = query.value(2).toString();
                          yas = query.value(3).toString();
                          tani = query.value(4).toString();
                          lokasyon = query.value(5).toString();
                      }
                  }
              }



            }
                    else
                {

                    qDebug() << query.lastError();
                }
    ui->label_8->setText(ad);
    ui->label_6->setText(soyad);
    ui->label_7->setText(yas);
    ui->label_11->setText(tani);
    ui->label_9->setText(lokasyon);
*/
grafikciz();

}

void MainWindow::on_horizontalSlider_valueChanged(int value)
{

    ui->label_31->setText(QString::number(value));
}


void MainWindow::on_pushButton_5_clicked()
{
    timer->start();
    timer2->stop();
}





void MainWindow::on_pushButton_3_clicked()
{  query = new QSqlQuery();
    QString database_sec="";
    database_sec +="SELECT ip,no FROM ";
    database_sec +=kimlik;
    database_sec +=" ORDER BY no;";
      qDebug() << "Veri cekiliyor..";
      if (query->exec(database_sec))
            {
            qDebug() << "Veri cekme Basarili";

          if (query->isActive()){
              if (query->isSelect()){
                  if (query->last()){
                     client_ip = query->value(0).toString();
                  }
              }
          }



        }
                else
            {
qDebug() << "Veri cekiliyosddwdwewedr..";
                qDebug() << query->lastError();
            }



     dialog  = new Dialog;
          dialog->setWindowTitle("Oda Kontrol Arayüzü");
          dialog->show();


dialog->verial(client_ip);
}
